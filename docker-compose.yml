services:
  db:
    image: postgres:18
    container_name: skidimg-postgres
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: skidimg
      PGDATA: /var/lib/postgresql/18/docker
    ports:
      - "5433:5432"
    volumes:
      - skidimg_db:/var/lib/postgresql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d ${POSTGRES_DB:-skidimg}"]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      default:
        aliases:
          - skidimg-postgres

  migrate:
    image: migrate/migrate
    container_name: skidimg-migrate
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./db:/db
    entrypoint:
      [
        "migrate",
        "-path=/db/migrations",
        "-database=postgres://postgres:${POSTGRES_PASSWORD}@db:5432/skidimg?sslmode=disable",
        "up"
      ]
    restart: "on-failure"
    env_file:
      - .env

  app:
    build: .
    container_name: skidimg-container
    ports:
      - "8080:8080"
    volumes:
      - ./uploads:/app/uploads
    environment:
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - DATABASE_URL=postgres://postgres:${POSTGRES_PASSWORD}@db:5432/skidimg?sslmode=disable
    depends_on:
      - db
    restart: unless-stopped
    env_file:
      - .env

volumes:
  skidimg_db:
